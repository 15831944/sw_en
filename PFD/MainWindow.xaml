<Window x:Class="PFD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:PFD"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Title="MainWindow" Height="1250" Width="2500">
    <Window.Resources>
        <!--<System:String x:Key="strHelloWorld">Hello, world!</System:String> -->
        <System:Double x:Key="theTextBoxWidth">120</System:Double>
        <System:Double x:Key="theTextBoxWidthLarge">130</System:Double>
        <CollectionViewSource x:Key="BuildingSides" Source="{Binding BuildingSides}"/>
        <CollectionViewSource x:Key="DoorsTypes" Source="{Binding DoorsTypes}"/>
        <CollectionViewSource x:Key="WindowColumns" Source="{Binding WindowColumns}"/>
    </Window.Resources>

    <Grid>
        <!--Base Grid 2 columns and 4 rows-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="234*" />
            <ColumnDefinition Width="500*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="900*" />
            <RowDefinition Height="70*" />
        </Grid.RowDefinitions>

        <TabControl Margin="5,5,0,88" Name="MainTabControl" SelectionChanged="TabControl_SelectionChanged" Grid.RowSpan="2">
            <TabItem Name ="General">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="General" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
                <ScrollViewer Grid.Row="0" Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <Grid Name="ParamsGrid" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="180" />
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="130"/>
                            <RowDefinition Height="130"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!-- TODO To Ondrej: Navrhujem prepracovat vsetko na DataGridView, bude to jednoduchsie lebo budeme mat len jeden typ objektu pre vstupy a vystupy a budeme tie tabulky vkladat do protokolu, napr. export do Wordu-->
                        <!-- Nemyslim si,ze to nejako extra pomoze. Export je vacsinou specificky a chces ho aj nejako stylovat, nie len nasmarat tabulky a koniec. -->

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Model:" HorizontalAlignment="Left" Margin="5,0"/>
                        <!--<ComboBox Grid.Row="0" Grid.Column="1" Name ="Combobox_Models" HorizontalAlignment="Left" 
                          VerticalAlignment="Center" SelectionChanged="ComboBox_Models_SelectionChanged" SelectedIndex="1"/>-->
                        <ComboBox Grid.Row="0" Grid.Column="1" Name ="Combobox_Models" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=ModelIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Gable Width:" HorizontalAlignment="Left" Margin="5,0" 
                         VerticalAlignment="Top" />
                        <TextBox Grid.Row="1" Grid.Column="1" Name ="TextBox_Gable_Width" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=GableWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Length:" HorizontalAlignment="Left" Margin="5,0"
                         VerticalAlignment="Top" />
                        <TextBox Grid.Row="2" Grid.Column="1" Name ="TextBox_Length" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"  
                         Text="{Binding Path=Length, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Wall Height:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Name ="TextBox_Wall_Height" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"  
                         Text="{Binding Path=WallHeight, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="3" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Roof Pitch:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Name ="TextBox_Roof_Pitch" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=RoofPitch_deg, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[°]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Frames:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top"/>
                        <TextBox Grid.Row="5" Grid.Column="1" Name ="TextBox_Frames_No" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=Frames, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="5" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[-]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Girt Distance:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="6" Grid.Column="1" Name ="TextBox_Girt_Distance" Width="{StaticResource theTextBoxWidth}"
                         HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=GirtDistance, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="6" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="6" Grid.Column="4" Text="Frame Column Fly Bracing Position:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="6" Grid.Column="5" Name ="Combobox_MainColumnFlyBracingPosition" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=MainColumnFlyBracingPositionIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="7" Grid.Column="4" Text="Rafter Fly Bracing Position:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="7" Grid.Column="5" Name ="Combobox_RafterFlyBracingPosition" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=RafterFlyBracingPositionIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="8" Grid.Column="4" Text="Number of Edge Purlin Intermediate Supports:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="8" Grid.Column="5" Name ="Combobox_EdgePurlin_ILS_Number" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=EdgePurlin_ILS_Number, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="9" Grid.Column="4" Text="Number of Sidewall Girt Intermediate Supports:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="9" Grid.Column="5" Name ="Combobox_Girt_ILS_Number" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=Girt_ILS_Number, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="10" Grid.Column="4" Text="Number of Purlin Intermediate Supports:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" Width="150" />
                        <ComboBox Grid.Row="10" Grid.Column="5" Name ="Combobox_Purlin_ILS_Number" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=Purlin_ILS_Number, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="13" Grid.Column="4" Text="Number of Front Side Girt Intermediate Supports:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="13" Grid.Column="5" Name ="Combobox_GirtFrontSide_ILS_Number" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=GirtFrontSide_ILS_Number, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="14" Grid.Column="4" Text="Number of Back Side Girt Intermediate Supports:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <ComboBox Grid.Row="14" Grid.Column="5" Name ="Combobox_GirtBackSide_ILS_Number" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=GirtBackSide_ILS_Number, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="7" Grid.Column="0" Text="Purlin Distance:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="7" Grid.Column="1" Name ="TextBox_Purlin_Distance" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=PurlinDistance, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="7" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Column Distance:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="8" Grid.Column="1" Name ="TextBox_Column_Distance" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=ColumnDistance, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="8" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="9" Grid.Column="0" Text="Bottom Girt Position:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="9" Grid.Column="1" Name ="TextBox_BottomGirt_Position" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=BottomGirtPosition, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="9" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[m]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="10" Grid.Column="0" Text="Front Frame Angle:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="10" Grid.Column="1" Name ="TextBox_FrontFrame_RakeAngle" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=FrontFrameRakeAngle, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="10" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[°]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="11" Grid.Column="0" Text="Back Frame Angle:" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" VerticalAlignment="Top" />
                        <TextBox Grid.Row="11" Grid.Column="1" Name ="TextBox_BackFrame_RakeAngle" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         TextWrapping="Wrap" VerticalAlignment="Top"
                         Text="{Binding Path=BackFrameRakeAngle, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True}"/>
                        <TextBlock Grid.Row="11" Grid.Column="2" HorizontalAlignment="Left" Margin="5,0"
                         TextWrapping="Wrap" Text="[°]" VerticalAlignment="Top"/>

                        <TextBlock Grid.Row="12" Grid.Column="0" Text="Roof Cladding:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="12" Grid.Column="1" Name ="Combobox_RoofCladding" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=RoofCladdingIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="13" Grid.Column="0" Text="Roof Cladding Color:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="13" Grid.Column="1" Name ="Combobox_RoofCladdingColor" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=RoofCladdingColorIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding CodeHEX}" Width="92" Height="12" Margin="0,1,5,1" />
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Row="14" Grid.Column="0" Text="Roof Cladding Thickness:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="14" Grid.Column="1" Name ="Combobox_RoofCladdingThickness" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=RoofCladdingThicknessIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="15" Grid.Column="0" Text="Wall Cladding:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="15" Grid.Column="1" Name ="Combobox_WallCladding" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=WallCladdingIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>

                        <TextBlock Grid.Row="16" Grid.Column="0" Text="Wall Cladding Color:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="16" Grid.Column="1" Name ="Combobox_WallCladdingColor" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=WallCladdingColorIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding CodeHEX}" Width="92" Height="12" Margin="0,1,5,1" />
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Row="17" Grid.Column="0" Text="Wall Cladding Thickness:" HorizontalAlignment="Left" Margin="5,0"/>
                        <ComboBox Grid.Row="17" Grid.Column="1" Name ="Combobox_WallCladdingThickness" HorizontalAlignment="Left" Width="{StaticResource theTextBoxWidth}"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=WallCladdingThicknessIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"/>


                        <CheckBox Name="chbLightDirectional" Grid.Row="0" Grid.Column="3" IsChecked="{Binding Path=LightDirectional}">Directional Light</CheckBox>
                        <CheckBox Name="chbLightPoint" Grid.Row="1" Grid.Column="3" IsChecked="{Binding Path=LightPoint}" >Point Light</CheckBox>
                        <CheckBox Name="chbLightSpot" Grid.Row="2" Grid.Column="3" IsChecked="{Binding Path=LightSpot}">SpotLight</CheckBox>
                        <CheckBox Name="chbLightAmbient" Grid.Row="3" Grid.Column="3" IsChecked="{Binding Path=LightAmbient}">Ambient Light</CheckBox>

                        <CheckBox Name="chbMaterialDiffuse" Grid.Row="0" Grid.Column="4" IsChecked="{Binding Path=MaterialDiffuse}">Diffuse Material</CheckBox>
                        <CheckBox Name="chbMaterialEmissive" Grid.Row="1" Grid.Column="4" IsChecked="{Binding Path=MaterialEmissive}">Emissive Material</CheckBox>

                        <StackPanel Grid.Row="2" Grid.Column="4" Orientation="Vertical" Grid.ColumnSpan="2">
                            <RadioButton Name="radioColorsIn3DMembers" GroupName="radioColorsIn3D"  IsChecked="{Binding Path=ColorsAccordingToMembers}">Colors according to Component Types</RadioButton>
                            <RadioButton Name="radioColorsIn3DSections" GroupName="radioColorsIn3D" IsChecked="{Binding Path=ColorsAccordingToSections}">Colors according to Sections</RadioButton>
                        </StackPanel>

                        <CheckBox Name="chbDisplayMembers" Grid.Row="5" Grid.Column="3" IsChecked="{Binding Path=DisplayMembers}">Display Members</CheckBox>
                        <CheckBox Name="chbDisplayJoints" Grid.Row="6" Grid.Column="3" IsChecked="{Binding Path=DisplayJoints}">Display Joints</CheckBox>
                        <CheckBox Name="chbDisplayPlates" Grid.Row="7" Grid.Column="3" IsChecked="{Binding Path=DisplayPlates}">Display Plates</CheckBox>
                        <CheckBox Name="chbDisplayConnectors" Grid.Row="8" Grid.Column="3" IsChecked="{Binding Path=DisplayConnectors}">Display Connectors</CheckBox>

                        <CheckBox Name="chbDisplayFoundations" Grid.Row="10" Grid.Column="3" IsChecked="{Binding Path=DisplayFoundations}">Display Foundations</CheckBox>
                        <CheckBox Name="chbDisplayFloorSlab" Grid.Row="11" Grid.Column="3" IsChecked="{Binding Path=DisplayFloorSlab}">Display Floor Slab</CheckBox>
                        <CheckBox Name="chbDisplayNodalSupports" Grid.Row="12" Grid.Column="3" IsChecked="{Binding Path=DisplayNodalSupports}">Nodal Supports</CheckBox>

                        <StackPanel Grid.Row="3" Grid.Column="4" Grid.RowSpan="3">
                            <CheckBox Name="chbDisplayMemberDescription" IsChecked="{Binding Path=ShowMemberDescription}">Display Member Description</CheckBox>
                            <CheckBox Name="chbDisplayMemberID" Margin="25 0 0 0" IsChecked="{Binding Path=ShowMemberID}" >Display Member ID</CheckBox>
                            <CheckBox Name="chbDisplayMemberPrefix" Margin="25 0 0 0" IsChecked="{Binding Path=ShowMemberPrefix}" >Display Member Prefix</CheckBox>
                            <CheckBox Name="chbDisplayMemberCrossSectionStartName" Margin="25 0 0 0" IsChecked="{Binding Path=ShowMemberCrossSectionStartName}" >Display Cross-Section name</CheckBox>
                            <CheckBox Name="chbDisplayMemberRealLength" Margin="25 0 0 0" IsChecked="{Binding Path=ShowMemberRealLength}" >Display Member Real Length</CheckBox>
                        </StackPanel>

                        <CheckBox Name="chbDisplayMembersCenterLines" Grid.Row="15" Grid.Column="3" IsChecked="{Binding Path=DisplayMembersCenterLines}">Display Members Centerlines</CheckBox>
                        <CheckBox Name="chbDisplaySolidModel" Grid.Row="16" Grid.Column="3" IsChecked="{Binding Path=DisplaySolidModel}">Display Solid Model</CheckBox>
                        <CheckBox Name="chbDisplayWireFrameModel" Grid.Row="17" Grid.Column="3" IsChecked="{Binding Path=DisplayWireFrameModel}">Display Wireframe Model</CheckBox>

                        <CheckBox Name="chbDisplayDistinguishedColorMember" Grid.Row="15" Grid.Column="4" IsChecked="{Binding Path=DisplayDistinguishedColorMember}">Distinguished Color Members</CheckBox>
                        <CheckBox Name="chbDisplayTransparentModelMember" Grid.Row="16" Grid.Column="4" IsChecked="{Binding Path=DisplayTransparentModelMember}">Transparent Members</CheckBox>

                        <CheckBox Name="chbDisplayGlobalAxis" Grid.Row="17" Grid.Column="4" Grid.ColumnSpan="1" IsChecked="{Binding Path=ShowGlobalAxis}">Display Global Axis</CheckBox>
                        <CheckBox Name="chbDisplayLocalMemberAxis" Grid.Row="18" Grid.Column="4" Grid.ColumnSpan="1" IsChecked="{Binding Path=ShowLocalMembersAxis}" IsEnabled="{Binding Path=IsEnabledLocalMembersAxis}" >Display Local Member Axis</CheckBox>
                        <CheckBox Name="chbDisplaySurfaceLoadsAxis" Grid.Row="19" Grid.Column="4" Grid.ColumnSpan="1" IsChecked="{Binding Path=ShowSurfaceLoadsAxis}" IsEnabled="{Binding Path=IsEnabledSurfaceLoadsAxis}" >Display Surface Loads Axis</CheckBox>


                        <!--<TextBlock Grid.Row="19" Grid.Column="3" Text="Load Case:" HorizontalAlignment="Left" Margin="5,0"/>

                        <ComboBox Grid.Row="19" Grid.Column="4" Grid.ColumnSpan="2" Name ="Combobox_LoadCase" HorizontalAlignment="Left" Width="259"
                         VerticalAlignment="Top" SelectedIndex="{Binding Path=LoadCaseIndex, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" SelectionChanged="Combobox_LoadCase_SelectionChanged"/>-->

                        <TextBlock Grid.Row="19" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="Doors and Windows" VerticalAlignment="Top" Width="205" Margin="5,2,0,0" FontSize="16" Grid.ColumnSpan="2"/>

                        <DataGrid Name ="Datagrid_DoorsAndGates" ItemsSource="{Binding DoorBlocksProperties, Mode=TwoWay, ValidatesOnExceptions=True}" Grid.Row="20" 
                                  HorizontalAlignment="Left" Height="120" IsReadOnly="false" AutoGenerateColumns="False" VerticalAlignment="Top" Width="450" Margin="5,2,0,0" Grid.ColumnSpan="6" AddingNewItem="Datagrid_DoorsAndGates_AddingNewItem">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="Side" ToolTipService.ToolTip="Select side of building" Width="70"
                                    SelectedItemBinding="{Binding Path=sBuildingSide, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Source={StaticResource BuildingSides}}" />
                                <DataGridComboBoxColumn Header="Bay No" ToolTipService.ToolTip="Select bay number" Width="50" SelectedValueBinding="{Binding iBayNumber, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridComboBoxColumn.ElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding Bays}"/>
                                        </Style>
                                    </DataGridComboBoxColumn.ElementStyle>
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding Bays}"/>
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                </DataGridComboBoxColumn>
                                <DataGridComboBoxColumn Header="Door Type" ToolTipService.ToolTip="Select type of door" Width="120"
                                    SelectedItemBinding="{Binding Path=sDoorType}"
                                    ItemsSource="{Binding Source={StaticResource DoorsTypes}}" />
                                <DataGridTextColumn Header="h [m]" ToolTipService.ToolTip="Enter height of door" Width="50" Binding="{Binding fDoorsHeight, ValidatesOnExceptions=True}"/>
                                <DataGridTextColumn Header="w [m]" ToolTipService.ToolTip="Enter width of door" Width="50" Binding="{Binding fDoorsWidth, ValidatesOnExceptions=True}"/>
                                <DataGridTextColumn Header="x [m]" ToolTipService.ToolTip="Enter position of door in the bay" Width="50" Binding="{Binding fDoorCoordinateXinBlock, ValidatesOnExceptions=True}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <DataGrid Name="Datagrid_Windows" ItemsSource="{Binding WindowBlocksProperties, Mode=TwoWay}" Grid.Row="21" 
                                  HorizontalAlignment="Left" Height="120" IsReadOnly="false" AutoGenerateColumns="False" VerticalAlignment="Top" Width="450" Margin="5,2,0,0" Grid.ColumnSpan="6" AddingNewItem="Datagrid_Windows_AddingNewItem">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="Side" ToolTipService.ToolTip="Select side of building" Width="70"
                                    SelectedItemBinding="{Binding Path=sBuildingSide, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Source={StaticResource BuildingSides}}" />
                                <DataGridComboBoxColumn Header="Bay No" ToolTipService.ToolTip="Select bay number" Width="50" SelectedValueBinding="{Binding iBayNumber, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridComboBoxColumn.ElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding Bays}"/>
                                        </Style>
                                    </DataGridComboBoxColumn.ElementStyle>
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource" Value="{Binding Bays}"/>
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                </DataGridComboBoxColumn>
                                <DataGridTextColumn Header="h [m]" ToolTipService.ToolTip="Enter height of window" Width="50" Binding="{Binding fWindowsHeight}"/>
                                <DataGridTextColumn Header="w [m]" ToolTipService.ToolTip="Enter width of window" Width="50" Binding="{Binding fWindowsWidth}"/>
                                <DataGridTextColumn Header="x [m]" ToolTipService.ToolTip="Enter horizontal position of window in the bay" Width="50" Binding="{Binding fWindowCoordinateXinBay}"/>
                                <DataGridTextColumn Header="z [m]" ToolTipService.ToolTip="Enter vertical position of window" Width="50" Binding="{Binding fWindowCoordinateZinBay}"/>
                                <DataGridComboBoxColumn Header="Muntin Number" ToolTipService.ToolTip="Enter number of window block columns" Width="100"
                                    SelectedItemBinding="{Binding Path=iNumberOfWindowColumns}"
                                    ItemsSource="{Binding Source={StaticResource WindowColumns}}" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <ToggleButton Name="btnDisplayDoorBlock" Grid.Row="20" Grid.Column="4" VerticalAlignment="Center" 
                                      ToolTip="Display door block" IsEnabled="True"
                                      HorizontalAlignment="Left" Margin="20 0 0 0" 
                                      Width="30" Height="30" Checked="btnDisplayDoorBlock_Checked" Unchecked="btnDisplayDoorBlock_Unchecked">
                            <Image Source="Resources/door.png" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Image>
                        </ToggleButton>
                        <ToggleButton Name="btnDisplayWindowBlock" Grid.Row="21" Grid.Column="4" VerticalAlignment="Center" 
                                      ToolTip="Display window block" IsEnabled="True"
                                      HorizontalAlignment="Left" Margin="20 0 0 0" 
                                      Width="30" Height="30" Checked="btnDisplayWindowBlock_Checked" Unchecked="btnDisplayWindowBlock_Unchecked">
                            <Image Source="Resources/window.png" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Image>
                        </ToggleButton>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Name ="Member_Input">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Members" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
                <!--<ScrollViewer Name="scrollViewUC_ComponentList" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">-->
                <local:UC_ComponentList x:Name="uc_ComponentList"></local:UC_ComponentList>
                <!--</ScrollViewer>-->
            </TabItem>
            <TabItem Name ="Joint_Input">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Joints" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Footing_Input">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Footings" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Loads">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Loads" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Load_Cases">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Load Cases" Foreground="Purple"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Load_Combinations">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Load Case Combinations" Foreground="Purple"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Internal_Forces">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Result Diagrams" Foreground="DarkCyan"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Member_Design">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Member Design" Foreground="DarkCyan"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Joint_Design">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Joint Design" Foreground="DarkCyan"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Footing_Design">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Footing Design" Foreground="DarkCyan"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Part_List">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Part List" Foreground="Green"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="Quotation">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Quotation" Foreground="Green"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem Name ="DoorsAndWindows">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Doors and Windows" Foreground="Green"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
        </TabControl>
        <Frame Grid.Row="0" Grid.RowSpan="2" Name ="Frame1" Content="Portal Frame 3D Preview"
               HorizontalContentAlignment="Stretch" 
               VerticalContentAlignment="Stretch" 
               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" NavigationUIVisibility="Hidden" Margin="5,5,5,88" Grid.Column="1"/>

        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Vertical">
            <!--<StackPanel Orientation="Horizontal">
                <ProgressBar Name="progressBar" Width="200" HorizontalAlignment="Left" Margin="15 5 0 0" Height="20" Minimum="0" Maximum="100" Value="0" Visibility="Visible" IsIndeterminate="False" />
                <Label Name="progressBarLabel" Margin="10 0 0 0" ></Label>
            </StackPanel>-->
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <Button Name="View_2D" Content ="View 2D" Height="20" Width="70" Margin="0 0 10 0" Click="View_2D_Click"/>
                <Button Name="Clear3DModel" Content="Clear" Width="70" Margin="0 0 10 0" Click="Clear3DModel_Click" Height="20" />
                <!--<Button Name="WindSpeedChart" Content="WindSpeed" Width="70" Margin="0 0 10 0" Click="WindSpeedChart_Click" Height="20" />-->
                <Button Name="ButtonCalculateForces" Content="Calculate" Width="100"  Margin="0 0 10 0" Click="Calculate_Click" Height="20"/>
                <Button Name="SystemComponentViewer" Content="Component Viewer" Height="20" Width="120" Margin="0 0 10 0" Click="SystemComponentViewer_Click"/>
                <Button Name="ExportDXF_3D" Content="Export DXF" Height="20" Width="100" Margin="0 0 10 0" Click="ExportDXF_3D_Click"/>

                <!--Temporary-->
                <Button Content="Wind Pressure" HorizontalAlignment="Left" Margin="0 0 10 0" Width="100" Click="WindPressureButton_Click"/>
                <Button Content="Purlin Designer" HorizontalAlignment="Left" Margin="0 0 10 0" Width="100" Click="PurlinDesignerButton_Click"/>

                <Button Name="ExportPDF" Content="Report" HorizontalAlignment="Left" Margin="0 0 10 0" Width="100" Click="ExportPDF_Click"/>
                <Button Name="ExportWord" Content="Report Word" HorizontalAlignment="Left" Margin="0 0 10 0" Width="100" Click="ExportWord_Click"/>

            </StackPanel>
        </StackPanel>

    </Grid>
</Window>
